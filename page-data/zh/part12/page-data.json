{"componentChunkName":"component---src-templates-part-intro-template-js","path":"/zh/part12","result":{"data":{"markdownRemark":{"html":"<div class=\"intro\">\n<!-- In this part, we will learn what containers are and do a deep dive on how they can be utilized in web development. With containers we will also learn a completely new viewpoint for web development outside of the \"backend\" and \"frontend\" that we are familiar with. -->\n<p>在这一章中，我们会了解什么是容器，并针对它如何简化Web 开发有一个深入的了解。对于容器来说，我们会用一个全新的视角来审视Web开发，而不是局限在“后端”和“前端”这些我们熟悉的概念中。</p>\n<!-- We will utilize containers to create immutable execution environments for our Node.js and React projects. Containers also make it easy to include multiple services with our projects. With the flexibility we will explore and experiment with multiple different and popular tools by utilizing containers. -->\n<p>我们会使用容器来为我们的Nodejs和React创建一个稳定不变的执行环境。利用容器也可以方便地向我们的项目引入多种服务。我们会利用多种不同的流行工具来操作我们的容器，来探索和实验这些便利性。</p>\n<!-- This part is by Jami Kousa and the Services Foundation Team of Unity Helsinki. Unity ... -->\n<p>这一章是由Jami Kousa 和 赫尔辛基大学的基础服务团队维护的。</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/36affdcecd1dc39aba57fea373cacda2/part-10.svg"},"part":12,"lang":"zh"}}},"pageContext":{"part":12,"lang":"zh"}}}